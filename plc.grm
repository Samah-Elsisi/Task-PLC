"Start Symbol" = <program>
               
!--------------Terminal----------
Id = [_]|{letter}{Alphanumeric}*
Digit= ('+'|'-')?{digit}+('.'{digit}+)? (('e'|('-'|'+'){digit}+) '^' ('+'|'-'){digit}+('.'{digit}+)?)?  
!--------------Rules-------------
<program> ::=Start <stmt_list> End
           

<stmt_list> ::= <concept>
             |<concept><stmt_list>
             

<concept> ::= <assign>
           |<if_stmt>
           |<for_stmt>
           |<switch_stmt>
           |<while_stmt>
           
<assign> ::=  <id> '=' <expr> ';'
          
<id> ::= Id
      
<expr> ::= <expr>'+'<term>
        |<expr>'-'<term>
        |<term>
        

<term> ::=<term>'*'<factor>
        |<term>'/'<factor>
        |<term>'%'<factor>
        |<factor>
        
<factor> ::= <factor>'**'<exp>
          |<exp>
          
<exp> ::= '('<expr>')'
       |<id>
       |<digit>
       
<digit> ::= Digit
         
!--------------if stmt----------

<if_stmt> ::= if'('<cond>')' Start <stmt_list> End
           |if '('<cond>')' Start <stmt_list> End else <stmt_list>
           
<cond> ::= <expr><op><expr>
        
<op> ::= '<'|'>'|'=='|'!='
      

!---------------for stmt----------

<for_stmt> ::= for '('<data><assign> ';' <cond> ';' <step>')' '{'<stmt_list>'}'
            
<data> ::= int |float |double |string
        
<step> ::= '--'<id>
        |<id>'--'
        |'++'<id>
        |<id>'++'
        |<assign>
        
!-------------switch stmt----------

<switch_stmt> ::= 'switch' '(' <exp> ')' '{' <case_list> '}'
               
<case_list> ::= <case> | <case_list> <case>
             
<case> ::= 'case' <exp> ':' <stmt_list>
         | 'default' ':' <stmt_list>

!-------------while stmt---------------------

<while_stmt> ::= 'while' <exp> 'do' <stmt_list>
              

       











